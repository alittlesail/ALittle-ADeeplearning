
namespace ADeeplearning;

public class XorModel : ARobotModel
{
    private List<List<int>> _input_list;
    private List<List<int>> _output_list;

    private ARobotInputExpression _input;
    private ARobotInputExpression _output;
    private ARobotLinearExpression _fc1;
    private ARobotLinearExpression _fc2;

    private ARobotExpression _out;
    private ARobotExpression _loss;

    public ctor()
    {
        this._input_list = [[0, 0], [0, 1], [1, 0], [1, 1]];
        this._output_list = [[0], [1], [1], [0]];

        this._total_train_count = ALittle.List_Len(this._input_list);

        // 构建图
        this._input = this._session.CreateInput([2]);
        this._output = this._session.CreateInput([1]);
        this._fc1 = this._session.CreateLinear(2, 8);
        this._fc2 = this._session.CreateLinear(8, 1);

        var input = this._input.Calc();
        var output = this._output.Calc();
        var x = this._fc1.Calc(input);
        x = x.Sigmoid();
        this._out = this._fc2.Calc(x);
        this._loss = this._out.Subtraction(output).Square();
    }
       
    // 训练
    public fun TrainImpl(int index) : double, bool
    {
        this._input.Update(this._input_list[index]);
        this._output.Update(this._output_list[index]);

        this._session.Init();

        var right = ALittle.Math_Abs(this._out.AsScalar() - this._output_list[index][1]) < 0.001;
        var loss = this._loss.AsScalar();

        this._session.Train();

        return loss, right;
    }

    public fun Output(double x1, double y1) : double
    {
        return 0;
    }
}

public class XorTrainLayout : CommonTrainLayout
{
    private XorModel _model;

    public get model() : XorModel
    {
        if (this._model == null)
        {
            this._model = new XorModel();
            this._model_path = g_ModuleBasePath.."Other/xor.model";
        }
        return this._model;
    }
}

protected class XorLayout : ALittle.DisplayLayout
{
	private ADeeplearning.XorTrainLayout _train;

	private ALittle.Text _result_1;
	private ALittle.Text _result_2;
	private ALittle.Text _result_3;
	private ALittle.Text _result_4;

    public fun TCtor()
    {
        this._train.AddEventListener(this, this.HandleTrainChanged);
    }

    private fun HandleTrainChanged(ALittle.UIChangedEvent event)
    {
        this.Calc();
    }

    private fun HandleCalcClick(ALittle.UIClickEvent event)
    {
        this.Calc();
    }

    private fun Calc()
    {
        var model = cast<XorModel>(this._train.model);
        this._result_1.text = ALittle.Math_Floor(model.Output(0.0, 0.0) * 100000) / 100000;
        this._result_2.text = ALittle.Math_Floor(model.Output(0.0, 1.0) * 100000) / 100000;
        this._result_3.text = ALittle.Math_Floor(model.Output(1.0, 0.0) * 100000) / 100000;
        this._result_4.text = ALittle.Math_Floor(model.Output(1.0, 1.0) * 100000) / 100000;
    }
}
