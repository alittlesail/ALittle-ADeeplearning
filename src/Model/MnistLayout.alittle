
namespace ADeeplearning;

public class MnistTrainLayout : CommonTrainLayout
{
    private deeplearning.DeeplearningMnistModel _model;

    public get model() : deeplearning.DeeplearningModel
    {
        if (this._model == null)
        {
            this._model = new deeplearning.DeeplearningMnistModel();
            this._model_path = g_ModuleBasePath.."Other/mnist.model";
            this._model.SetMnistRoot(g_ModuleBasePath.."Data");
        }
        return this._model;
    }
}

protected class MnistLayout : ALittle.DisplayLayout
{
	private ADeeplearning.MnistTrainLayout _train;

	private ALittle.Text _result_text;
	private AUIPlugin.AUIDrawingBoard _board;
    private deeplearning.DeeplearningMnistModel _model;

    private string _model_path;
    private bool _loaded = false;

    public fun TCtor()
    {
        this._train.AddEventListener(this, this.HandleTrainChanged);

        this._model_path = g_ModuleBasePath.."Other/mnist.model";
        this._model = new deeplearning.DeeplearningMnistModel();

        this._board.SetPan(5, 0xFFFFFFFF);
        this._board.SetDrawSize(ALittle.Math_Floor(this._board.width), ALittle.Math_Floor(this._board.height), 0xFF000000);
        this._result_text.text = "识别结果";
    }

    private fun HandleTrainChanged(ALittle.UIChangedEvent event)
    {
        this._model.Load(this._model_path);
    }

    private fun HandleDrawChanged(ALittle.UIChangedEvent event)
    {
        if (!this._loaded)
        {
            this._model.Load(this._model_path);
            this._loaded = true;
        }

        var address = carp.GetCarpSurfaceAddress(this._board.surface);
        var result = this._model.Output(address);
        this._result_text.text = "识别结果:"..result;
    }

    private fun HandleClearClick(ALittle.UIClickEvent event)
    {
        this._result_text.text = "识别结果";
        this._board.ClearContent(0xFF000000);
    }
}
